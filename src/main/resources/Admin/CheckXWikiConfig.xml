<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Admin</web>
<name>CheckXWikiConfig</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Admin.WebHome</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1375188483000</creationDate>
<date>1375893290000</date>
<contentUpdateDate>1375893290000</contentUpdateDate>
<version>1.1</version>
<title></title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>= XWiki Configuration Check =

{{groovy}}

import com.xpn.xwiki.util.Util;
import java.text.DecimalFormat;
import java.lang.management.ManagementFactory;
import javax.management.MBeanServer;

if( System.getProperty('catalina.base') ) {
appserverpath = System.getProperty('catalina.base')
} else {
appserverpath = ".."
}

def wiki = xcontext.getContext().getWiki()


def readableSize(size) {
    if(size &lt;= 0) return "0";
    def units = ["B", "KB", "MB", "GB", "TB" ];
    int digitGroups = (int) (Math.log10(size)/Math.log10(1024));
    return new DecimalFormat("#,##0.#").format(size/Math.pow(1024, digitGroups)) + " " + units[digitGroups];
}

def xwikicfgdir = new File("${appserverpath}/webapps/xwiki/WEB-INF/xwiki.cfg")
if (xwikicfgdir.exists()) {
  def content = Util.getFileContent(xwikicfgdir)
  def is = new ByteArrayInputStream(content.getBytes());
  def props = new Properties();
  props.load(is);
  xwencoding = props.get("xwiki.encoding")
  xwencryptkey = props.get("xwiki.authentication.encryptionKey")
} else {
  xwencoding = 'null'
  xwencryptkey = 'null'
}


def getEnvVars() {
  Process p = null;
  Properties envVars = new Properties();
  Runtime r = Runtime.getRuntime();
  String OS = System.getProperty("os.name").toLowerCase();
  if (OS.indexOf("windows 9") &gt; -1) {
    p = r.exec( "command.com /c set" );
    }
  else if ( (OS.indexOf("nt") &gt; -1)
         || (OS.indexOf("windows 2000") &gt; -1 )
         || (OS.indexOf("windows xp") &gt; -1) 
         || (OS.indexOf("windows") &gt; -1) ) {
    // thanks to JuanFran for the xp fix!
    p = r.exec( "cmd.exe /c set" );
    }
  else {
    // our last hope, we assume Unix (thanks to H. Ware for the fix)
    p = r.exec( "env" );
    }
  BufferedReader br = new BufferedReader
     ( new InputStreamReader( p.getInputStream() ) );
  String line;
  while( (line = br.readLine()) != null ) {
   int idx = line.indexOf( '=' );
   String key = line.substring( 0, idx );
   String value = line.substring( idx+1 );
   envVars.setProperty( key, value );
   // System.out.println( key + " = " + value );
   }
  return envVars;
}

println "This script intends to show most important parameters for XWiki hosting. You can [[go directly to recommandations&gt;&gt;${doc}||anchor=HRecommandations]]"

if (wiki!=null){
println "== Memory Configuration =="

println "This lists the memory settings of the Java VM and the current memory usage. An XWiki instance should be installed with at least 500Mb. A large one with at least  1GB, especially if the cache settings are boosted. If after *flushing the cache*, the current free memory is low and the current total close to the maximum the instance might be running out of memory."
println "* Max Memory: ${readableSize(wiki.maxMemory())}" 
println "* Current Total: ${readableSize(wiki.totalMemory())}" 
println "* Current Free: ${readableSize(wiki.freeMemory())}"


println "== Cache configuration =="

println "This lists the main cache settings. An XWiki instance is set by default to 100 for the main cache which is ok for a small instance. A large one with at least 1000 (large XE) to 3000 (very large XE or large XEM)."
def csize = wiki.Param("xwiki.store.cache.capacity", "100")
println "* Store Page Cache Capacity : ${csize}"

MBeanServer server = ManagementFactory.getPlatformMBeanServer()
def mbean = null

mbean = new GroovyMBean(server, 'org.xwiki.infinispan:type=Cache,name="xwiki.store.pagecache(local)",manager="XWikiCacheManager",component=Statistics')
isize = (mbean==null) ? null : mbean.getProperty("numberOfEntries")
println "* Store Page Cache in Use : ${isize}"



println "== Database configuration =="

println "This lists the database settings of the Java VM and the current pool usage. An XWiki instance is set by default to 2 connections in the pool, which is ok for a very small instance. A large one with at least 10 or 20. If there is no activity on the server, the active setting should be zero."
def provider = wiki.getStore().getStore().sessionFactory.connectionProvider
def ds = wiki.getPrivateField(provider,"ds")
def pool = wiki.getPrivateField(ds,"connectionPool")

println "* Max Active (number of possible connections to the DB): $pool.maxActive"
println "* Max Idle (number of possible idle connections to the DB): $pool.maxIdle"
println "* Active (current active connections to the DB): $pool.numActive"
println "* Idle (current idle connections to the DB): $pool.numIdle"


println "== Encoding Configuration =="

println "This lists ALL the encoding configuration of tomcat, xwiki, java. All should return UTF-8 except mail.mime.charset which can also return null (the file.encoding config will then be used)"


println "=== System environment ==="

println "* LANG :" + getEnvVars().get("LANG")
println "* PWD :" + getEnvVars().get("PWD")


println "=== Java command line ==="

def fileenc = System.getProperty("file.encoding")
println "* file.encoding: ${fileenc}"
def mimecharset = System.getProperty("mail.mime.charset")
println "* mail.mime.charset: ${mimecharset}"

def tomcatconffile = new File("${appserverpath}/conf/server.xml")
if (tomcatconffile.exists()) {
 def node = new XmlParser().parse(tomcatconffile)

println "=== Tomcat configuration ==="
for (connector in node.Service.Connector) {
 urienc = connector.'@URIEncoding'
 prot = connector.'@protocol'
 println "* Procotol ${prot} has encoding ${urienc}" 
}
} else {
 println "* {{error}}tomcat.connectors.encoding : The tomcat configuration file could not be found. You might not be using tomcat or the app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}


println "=== XWiki Configuration ==="


if (xwencoding) {
println "* XWiki encoding: ${xwencoding}";
} else {
 println "{{error}}The XWiki configuration file could not be found. The app server path (appserverpath) variable need to be set (you can edit the page to set it){{/error}}"
}

println "= Recommandations ="

println "Here will be shown our recommandations to increase wiki's performance and stability, if any :"

if (wiki.maxMemory() &lt; 800000000) {
 println "* {{warning}}Amount of memory allocated to XWiki is too low for a production usage. Max memory available for the JVM is set to ${readableSize(wiki.maxMemory())}, it should be at least 800MB.{{/warning}}"
}

if (csize &lt; "1000") {
 println "* {{warning}}Your cache configuration is too low for a production usage. Your cache is set to ${csize} documents, it should be 1000 or more.{{/warning}}"
}

if (xwencoding &amp;&amp; xwencoding != "UTF-8") {
 println "* {{warning}}XWiki encoding is not set properly. We advise to use UTF-8 encoding for every software used (Servlet container, front end, database...){{/warning}}"
}

if (xwencryptkey == "titititititititititititititititi") {
 println "* {{warning}}You should change your encryption key (xwiki.authentication.encryptionKey) and validation key (xwiki.authentication.validationKey) of cookies in xwiki.cfg configuration file {{/warning}}"
}

}
{{/groovy}}</content></xwikidoc>
